let graphic_imports =
  let buffer = Buffer.create 128 in
  let add_str s = Buffer.add_string buffer s in
  add_str "#include <sys/types.h>\n";
  add_str "#include <libgte.h>\n";
  add_str "#include <libetc.h>\n";
  add_str "#include <libgpu.h>\n";
  add_str "#include <libapi.h>\n";
  add_str "#include <stdlib.h>\n\n";
  add_str "#define OTLEN 8\n";
  add_str "#define MAX_SNAKE_LENGTH 300\n";
  add_str "DISPENV disp[2];\n";
  add_str "DRAWENV draw[2];\n";
  add_str "int db = 0;\n";
  add_str "u_long ot[2][OTLEN];\n";
  add_str "char pribuff[2][32768];\n";
  add_str "char *nextpri;\n";
  add_str "TILE *tile;\n";
  add_str "#define PAD_SELECT      1\n";
  add_str "#define PAD_L3          2\n";
  add_str "#define PAD_R3          4\n";
  add_str "#define PAD_START       8\n";
  add_str "#define PAD_UP          16\n";
  add_str "#define PAD_RIGHT       32\n";
  add_str "#define PAD_DOWN        64\n";
  add_str "#define PAD_LEFT        128\n";
  add_str "#define PAD_L2          256\n";
  add_str "#define PAD_R2          512\n";
  add_str "#define PAD_L1          1024\n";
  add_str "#define PAD_R1          2048\n";
  add_str "#define PAD_TRIANGLE    4096\n";
  add_str "#define PAD_CIRCLE      8192\n";
  add_str "#define PAD_CROSS       16384\n";
  add_str "#define PAD_SQUARE      32768\n";
  add_str "typedef struct _PADTYPE\n";
  add_str "{\n";
  add_str "  unsigned char	stat;\n";
  add_str "  unsigned char	len:4;\n";
  add_str "  unsigned char	type:4;\n";
  add_str "  unsigned short	btn;\n";
  add_str "  unsigned char	rs_x,rs_y;\n";
  add_str "  unsigned char	ls_x,ls_y;\n";
  add_str "} PADTYPE;\n";
  add_str "u_char padbuff[2][34];\n";
  add_str "void init(void) {\n";
  add_str "    ResetGraph(0);\n";
  add_str "    SetDefDispEnv(&disp[0], 0, 0, 320, 240);\n";
  add_str "    SetDefDispEnv(&disp[1], 0, 240, 320, 240);\n";
  add_str "    SetDefDrawEnv(&draw[0], 0, 240, 320, 240);\n";
  add_str "    SetDefDrawEnv(&draw[1], 0, 0, 320, 240);\n";
  add_str "    setRGB0(&draw[0], 63, 0, 127);\n";
  add_str "    setRGB0(&draw[1], 63, 0, 127);\n";
  add_str "    draw[0].isbg = 1;\n";
  add_str "    draw[1].isbg = 1;\n";
  add_str "    PutDispEnv(&disp[0]);\n";
  add_str "    PutDrawEnv(&draw[0]);\n";
  add_str "    nextpri = pribuff[0];\n";
  add_str "    InitPAD( padbuff[0], 34, padbuff[1], 34 );\n";
  add_str "    StartPAD();\n";
  add_str "    ChangeClearPAD( 1 );\n";
  add_str "    FntLoad(960, 0);\n";
  add_str "    FntOpen(0, 16, 320, 224, 0, 100);\n";
  add_str "}\n";
  add_str "void display(void) {\n";
  add_str "    DrawSync(0);\n";
  add_str "    VSync(0);\n";
  add_str "    PutDispEnv(&disp[db]);\n";
  add_str "    PutDrawEnv(&draw[db]);\n";
  add_str "    SetDispMask(1);\n";
  add_str "    DrawOTag(ot[db]+OTLEN-1);\n";
  add_str "    db = !db;\n";
  add_str "    nextpri = pribuff[db];\n";
  add_str "}\n";
  add_str "enum Direction {\n";
  add_str "    NONE,\n";
  add_str "    UP,\n";
  add_str "    RIGHT,\n";
  add_str "    DOWN,\n";
  add_str "    LEFT\n";
  add_str "};\n";
  add_str "typedef struct position {\n";
  add_str "    int x;\n";
  add_str "    int y;\n";
  add_str "} position_t;\n";
  add_str "typedef struct textureSize {\n";
  add_str "    int width;\n";
  add_str "    int height;\n";
  add_str "} textureSize_t;\n";
  add_str "typedef struct color{\n";
  add_str "  int r;\n";
  add_str "  int g;\n";
  add_str "  int b;\n";
  add_str "} color_t;\n";
  add_str "color_t RED = {255, 0, 0};\n";
  add_str "color_t BLUE = {0, 0, 255};\n";
  add_str "color_t GREEN = {0, 255, 0};\n";
  add_str "color_t YELLOW = {255, 255, 0};\n";
  add_str "color_t WHITE = {255, 255, 255};\n\n";
  Buffer.contents buffer